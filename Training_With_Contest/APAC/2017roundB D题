#include <iostream>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>
#include <queue>
#include <cmath>
#include <map>
#include <stack>
#define eps 0.0000000001
#define maxn 5009
#define inf 0x3f3f3f3f
#define mod 1000000009
#define ll long long
using namespace std;
ll f[maxn],g[maxn],t[maxn],dp[2][maxn],ff[maxn],sum[2][maxn],cal[maxn];
ll n,m;
void DP()
{
    for(int i=1; i<=n; i++)
        dp[1][i]=1,sum[1][i]=sum[1][i-1]+1;
    for(int i=2; i<=n; i++)
    {
        int tmp=i&1;
        memset(sum[tmp],0,sizeof(sum[tmp]));
        memset(dp[tmp],0,sizeof(dp[tmp]));
        for(int j=i; j<=n; j++)
        {
            int cur=tmp^1;
            //i,j=sigma([i~j-1])
            dp[tmp][j]=(dp[tmp][j]+sum[cur][j-1]-sum[cur][i-1])%m;
            //for(int k=i; k<j; k++)
            //    dp[i][j]=(dp[i-1][k]+dp[i][j])%m;
            dp[tmp][j]=(dp[tmp][j]+dp[cur][j]*1LL*(j-i+1)%m)%m;
            sum[tmp][j]=(sum[tmp][j-1]+dp[tmp][j])%m;
            if(i==j)
            {
                cal[i]=dp[tmp][j];
                //printf("i=%d   %lld\n",i,cal[i]);
            }
            //printf("dp[%d][%d]=%lld\n",i,j,dp[i][j]);
        }
    }
    cal[1]=1;
}

int main()
{
    freopen("d:\\in.txt","r",stdin);
    freopen("d:\\ix.txt","w",stdout);
    int T;
    scanf("%d",&T);
    for(int cas=1; cas<=T; cas++)
    {
        scanf("%lld%lld",&n,&m);
        memset(f,0,sizeof(f));
        memset(g,0,sizeof(g));
        memset(t,0,sizeof(t));
        DP();
        /*
        //小数据dp方式
        for(int i=1; i<=n; i++)
            f[i][1]=dp[i][i];
        for(int i=1; i<=n; i++)
        {
            for(int j=2; j<=i; j++)
            {
                for(int k=1; k<i; k++)
                {
                    f[i][j]=(f[i][j]+f[k][j-1]*cal[i-k]%m)%m;
                    //printf("%d %d %lld\n",i,j,f[i][j]);
                }
            }
        }
        ll ans=0;
        //printf("dasf   %lld   %lld\n",f[3][1],f[3][3]);
        for(int i=1; i<=n; i++)
            ans=(ans+f[n][i]*(1LL*i*i%m)%m)%m;
        */
        f[0]=1;
        t[0]=1;
        for(int i=0;i<=n;i++)
        {
            for(int j=1;j+i<=n;j++)
            {
                t[i+j]=(t[i]*cal[j]%m+t[i+j])%m;
            }
            //printf("%d %lld\n",i,t[i]);
        }
        t[0]=0;
        for(int i=0;i<=n;i++)
            for(int j=1;j+i<=n;j++)
               f[i+j]=(f[i+j]+f[i]*cal[j]%m+cal[j]*t[i]%m)%m;
        f[0]=0;
        for(int j=1;j<=n;j++)
            g[j]=cal[j];
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j+i<=n;j++)
            {
               g[i+j]=(g[i+j]+g[i]*cal[j]%m+2*cal[j]*f[i]%m+cal[j]*t[i])%m;
            }
            //printf("%d  %lld   %lld\n",i,f[i],g[i]);
        }
        printf("Case #%d: %lld\n",cas,g[n]%m);
    }
    return 0;
}
