#include <iostream>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>
#include <queue>
#include <math.h>
#include <map>
#define eps 0.0000000001
#define maxn 300009
#define inf 0x3f3f3f3f
#define mod 1000000009
#define ll long long
using namespace std;
int v[maxn],c[maxn],sg[maxn],n;
struct ee
{
    int l,r,vv,pos;
} tr[maxn*6];
void build(int a,int l,int r)
{
    tr[a].l=l;
    tr[a].r=r;
    tr[a].vv=-1;
    if(l==r)
    {
        tr[a].pos=l;
        return;
    }
    int mid=(l+r)/2;
    build(a*2,l,mid);
    build(a*2+1,mid+1,r);
    tr[a].pos=tr[a*2].pos;
}

void add(int a,int x,int vv)
{
    if(tr[a].l==x&&tr[a].r==x)
    {
        tr[a].vv=vv;
        return;
    }
    int mid=(tr[a].l+tr[a].r)/2;
    if(x<=mid)
        add(a*2,x,vv);
    else
        add(a*2+1,x,vv);
    if(tr[a*2].vv<=tr[a*2+1].vv)
        tr[a].vv=tr[a*2].vv,tr[a].pos=tr[a*2].pos;
    else
        tr[a].vv=tr[a*2+1].vv,tr[a].pos=tr[a*2+1].pos;
}

pair<int,int> que(int a,int l,int r,int vv)
{
    if(tr[a].l==tr[a].r)
    {
        return make_pair(tr[a].vv,tr[a].pos);
    }
    int mid=(tr[a].l+tr[a].r)/2;
    pair<int,int> tt;
    if(tr[a*2].vv<vv&&l<=mid)
        tt=que(a*2,l,r,vv);
    else if(tr[a*2+1].vv<vv&&r>mid)
        tt=que(a*2+1,l,r,vv);
    return tt;
}

int main()
{
    //freopen("d:\\in.txt","r",stdin);
    scanf("%d",&n);
    build(1,1,n);
    for(int i=2; i<=n; i++)
        scanf("%d%d",&c[i],&v[i]);
    int ans=0;
    add(1,1,1);
    for(int i=2; i<=n; i++)
    {
        int tmp=i-c[i];
        pair<int,int> op;
        op=que(1,1,i-tmp+1,tmp);
        sg[i]=op.second;
        add(1,sg[i],i);
        if(v[i]%2)
            ans^=(sg[i]-1);
    }
    if(ans)
        printf("First\n");
    else
        printf("Second\n");
    return 0;
}
